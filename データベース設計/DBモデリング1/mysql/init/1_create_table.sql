CREATE DATABASE IF NOT EXISTS sushi;
USE sushi;

CREATE TABLE IF NOT EXISTS genres
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS categories
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS menus
(
    `id` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `price` INT NOT NULL,
    `genre_id` INT NOT NULL,
    `category_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(genre_id),
    INDEX(category_id),
    FOREIGN KEY (genre_id) REFERENCES genres(id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE IF NOT EXISTS customers
(
    `id` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `phone_number` VARCHAR(12) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS prefectures
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS areas
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `prefecture_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(prefecture_id),
    FOREIGN KEY (prefecture_id) REFERENCES prefectures(id)
);

CREATE TABLE IF NOT EXISTS stores
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `area_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(area_id),
    FOREIGN KEY (area_id) REFERENCES areas(id)
);

CREATE TABLE IF NOT EXISTS taxes
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `rate` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS orders
(
    `id` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `payment_paid` BOOLEAN,
    `customer_id` BIGINT NOT NULL,
    `store_id` INT NOT NULL,
    `tax_id` INT NOT NULL,
    `orderd_at`  DATETIME NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(customer_id),
    INDEX(store_id),
    INDEX(tax_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (store_id) REFERENCES stores(id),
    FOREIGN KEY (tax_id) REFERENCES taxes(id)
);

CREATE TABLE IF NOT EXISTS order_menus
(
    `id` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `quantity` INT NOT NULL,
    `wasabi_selected` BOOLEAN,
    `order_id` BIGINT NOT NULL,
    `menu_id` BIGINT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(order_id),
    INDEX(menu_id),
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (menu_id) REFERENCES menus(id)
);

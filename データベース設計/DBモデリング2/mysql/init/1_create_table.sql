CREATE DATABASE IF NOT EXISTS slack;
USE slack;

CREATE TABLE IF NOT EXISTS users
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS messages
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `content` VARCHAR(100) NOT NULL,
    `sended_at` DATETIME,
    `parent_message_id` INT NOT NULL,
    `user_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(user_id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS workspaces
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS users_belonging_to_workspaces
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `workspace_id` INT NOT NULL,
    `category_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(workspace_id),
    FOREIGN KEY (workspace_id) REFERENCES workspaces(id)
);

CREATE TABLE IF NOT EXISTS channels
(
    `id` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL,
    `workspace_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(workspace_id),
    FOREIGN KEY (workspace_id) REFERENCES workspaces(id)
);


CREATE TABLE IF NOT EXISTS users_belonging_to_channels
(
    `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `channel_id` INT NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP null ON UPDATE CURRENT_TIMESTAMP,
    INDEX(channel_id),
    FOREIGN KEY (channel_id) REFERENCES channels(id)
);
